SELECT *
FROM Height

-- SELECT *
-- FROM Weight

-- Select Data that we are going to be using

Select RED_FIGHTER, BLUE_FIGHTER, LOCATION, WINNER, WEIGHT_CLASS, RED_HEIGHT_CMS, BLUE_HEIGHT_CMS
From Height

-- Starting off by looking at the average height of the red fighter and blue fighter column

Select AVG(RED_HEIGHT_CMS) AS AVG_RED_HEIGHT, AVG(BLUE_HEIGHT_CMS) AS AVG_BLUE_HEIGHT, COUNT
From Height

-- Taking a look at the total number of wins for red 

Select COUNT(*) AS COUNT
From Height
Where WINNER = 'RED'

-- Taking a look at the win percentage for all red fighters

SELECT (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM Height) AS percentage
FROM Height
WHERE WINNER = 'RED'

-- Taking a look at the win percentage for all blue fighters

SELECT (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM Height) AS percentage
FROM Height
WHERE WINNER = 'BLUE'

-- Taking a look at the percentage of bouts that ended in draw 

SELECT (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM Height) AS percentage
FROM Height
WHERE WINNER = 'DRAW'

-- Checking if the total win percentage sums to 100

SELECT (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM Height) AS percentage
FROM Height
WHERE WINNER = 'DRAW' OR WINNER = 'RED' OR WINNER = 'BLUE'

-- Showing the red win percentage, blue win percentage and draw  percentage sum to 100 
-- Shows the likelihood of winning depending on your assigned corner. 

SELECT
    (COUNT(CASE WHEN WINNER = 'RED' THEN 1 END) * 100.0) / COUNT(*) AS RED_PER,
    (COUNT(CASE WHEN WINNER = 'BLUE' THEN 1 END) * 100.0) / COUNT(*) AS BLUE_PER,
    (COUNT(CASE WHEN WINNER = 'DRAW' THEN 1 END) * 100.0) / COUNT(*) AS DRAW_PER,
    ((COUNT(CASE WHEN WINNER = 'DRAW' THEN 1 END) + COUNT(CASE WHEN WINNER = 'RED' THEN 1 END) + COUNT(CASE WHEN WINNER = 'BLUE' THEN 1 END)) * 100.0) / COUNT(*) AS TOTAL_PER
FROM
    Height;

-- Looking at Older Fighter vs. Younger Fighter  

SELECT
    (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_AGE > RED_AGE THEN 1 END) +
    COUNT(CASE WHEN WINNER = 'RED' AND RED_AGE > BLUE_AGE THEN 1 END)) * 100.0 / COUNT(*) AS OLDER_WIN_PER, 
    (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_AGE < RED_AGE THEN 1 END) +
    COUNT(CASE WHEN WINNER = 'RED' AND RED_AGE < BLUE_AGE THEN 1 END)) * 100.0 / COUNT(*) AS YOUNGER_WIN_PER,
    (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_AGE = RED_AGE THEN 1 END) +
    COUNT(CASE WHEN WINNER = 'RED' AND RED_AGE = BLUE_AGE THEN 1 END)) * 100.0 / COUNT(*) AS SAME_AGE_PER,
    COUNT(CASE WHEN WINNER = 'DRAW' THEN 1 END) * 100.0 / COUNT (*) AS DRAW_PER

FROM
    Height

-- Looking at Heavier Fighter vs. Lighter Fighter

SELECT
    (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_WEIGHT_LBS > RED_WEIGHT_LBS THEN 1 END) +
    COUNT(CASE WHEN WINNER = 'RED' AND RED_WEIGHT_LBS > BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS HEAVIER_WIN_PER,
    (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_WEIGHT_LBS < RED_WEIGHT_LBS THEN 1 END) +
    COUNT(CASE WHEN WINNER = 'RED' AND RED_WEIGHT_LBS < BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS LIGHTER_WIN_PER,
    (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_WEIGHT_LBS = RED_WEIGHT_LBS THEN 1 END) +
    COUNT(CASE WHEN WINNER = 'RED' AND RED_WEIGHT_LBS = BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS SAME_WEIGHT_PER,
    (COUNT(CASE WHEN WINNER = 'DRAW' AND RED_WEIGHT_LBS = BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS DRAW_PER
FROM Weight

SELECT
    SUM(HEAVIER_WIN_PER + LIGHTER_WIN_PER + SAME_WEIGHT_PER + DRAW_PER) AS TOTAL_PER,
FROM
    (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_WEIGHT_LBS > RED_WEIGHT_LBS THEN 1 END) +
    COUNT(CASE WHEN WINNER = 'RED' AND RED_WEIGHT_LBS > BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS HEAVIER_WIN_PER,
    (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_WEIGHT_LBS < RED_WEIGHT_LBS THEN 1 END) +
    COUNT(CASE WHEN WINNER = 'RED' AND RED_WEIGHT_LBS < BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS LIGHTER_WIN_PER,
    (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_WEIGHT_LBS = RED_WEIGHT_LBS THEN 1 END) +
    COUNT(CASE WHEN WINNER = 'RED' AND RED_WEIGHT_LBS = BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS SAME_WEIGHT_PER,
    (COUNT(CASE WHEN WINNER = 'DRAW' AND RED_WEIGHT_LBS = BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS DRAW_PER
FROM Weight

-- Intoducing TOTAL_PER to check results sum to 100.0

SELECT
    HEAVIER_WIN_PER,
    LIGHTER_WIN_PER,
    SAME_WEIGHT_PER,
    DRAW_PER,
  (subquery.HEAVIER_WIN_PER + subquery.LIGHTER_WIN_PER + subquery.SAME_WEIGHT_PER + subquery.DRAW_PER) AS TOTAL_PER
FROM
  (
    SELECT
      (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_WEIGHT_LBS > RED_WEIGHT_LBS THEN 1 END) +
       COUNT(CASE WHEN WINNER = 'RED' AND RED_WEIGHT_LBS > BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS HEAVIER_WIN_PER,
      (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_WEIGHT_LBS < RED_WEIGHT_LBS THEN 1 END) +
       COUNT(CASE WHEN WINNER = 'RED' AND RED_WEIGHT_LBS < BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS LIGHTER_WIN_PER,
      (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_WEIGHT_LBS = RED_WEIGHT_LBS THEN 1 END) +
       COUNT(CASE WHEN WINNER = 'RED' AND RED_WEIGHT_LBS = BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS SAME_WEIGHT_PER,
      (COUNT(CASE WHEN WINNER = 'DRAW' AND RED_WEIGHT_LBS = BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS DRAW_PER
    FROM Weight
  ) AS subquery;

  -- The above query doesn't sum to 100.0 so I wanted to check if perhaps it was a rounding error

SELECT
  ROUND(subquery.HEAVIER_WIN_PER, 2) AS HEAVIER_WIN_PER,
  ROUND(subquery.LIGHTER_WIN_PER, 2) AS LIGHTER_WIN_PER,
  ROUND(subquery.SAME_WEIGHT_PER, 2) AS SAME_WEIGHT_PER,
  ROUND(subquery.DRAW_PER, 2) AS DRAW_PER,
  ROUND(subquery.HEAVIER_WIN_PER + subquery.LIGHTER_WIN_PER + subquery.SAME_WEIGHT_PER + subquery.DRAW_PER, 2) AS TOTAL_PER
FROM
  (
    SELECT
      (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_WEIGHT_LBS > RED_WEIGHT_LBS THEN 1 END) +
       COUNT(CASE WHEN WINNER = 'RED' AND RED_WEIGHT_LBS > BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS HEAVIER_WIN_PER,
      (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_WEIGHT_LBS < RED_WEIGHT_LBS THEN 1 END) +
       COUNT(CASE WHEN WINNER = 'RED' AND RED_WEIGHT_LBS < BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS LIGHTER_WIN_PER,
      (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_WEIGHT_LBS = RED_WEIGHT_LBS THEN 1 END) +
       COUNT(CASE WHEN WINNER = 'RED' AND RED_WEIGHT_LBS = BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS SAME_WEIGHT_PER,
      (COUNT(CASE WHEN WINNER = 'DRAW' AND RED_WEIGHT_LBS = BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS DRAW_PER
    FROM Weight
  ) AS subquery;

  -- TOTAL_PER still does not sum to 100 meaning there is still some results not being captured - testing theory with DRAW_PER

SELECT
  ROUND(subquery.HEAVIER_WIN_PER, 2) AS HEAVIER_WIN_PER,
  ROUND(subquery.LIGHTER_WIN_PER, 2) AS LIGHTER_WIN_PER,
  ROUND(subquery.SAME_WEIGHT_PER, 2) AS SAME_WEIGHT_PER,
  ROUND(subquery.DRAW_PER, 2) AS DRAW_PER,
  ROUND(subquery.HEAVIER_WIN_PER + subquery.LIGHTER_WIN_PER + subquery.SAME_WEIGHT_PER + subquery.DRAW_PER, 2) AS TOTAL_PER
FROM
  (
    SELECT
      (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_WEIGHT_LBS > RED_WEIGHT_LBS THEN 1 END) +
       COUNT(CASE WHEN WINNER = 'RED' AND RED_WEIGHT_LBS > BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS HEAVIER_WIN_PER,
      (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_WEIGHT_LBS < RED_WEIGHT_LBS THEN 1 END) +
       COUNT(CASE WHEN WINNER = 'RED' AND RED_WEIGHT_LBS < BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS LIGHTER_WIN_PER,
      (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_WEIGHT_LBS = RED_WEIGHT_LBS THEN 1 END) +
       COUNT(CASE WHEN WINNER = 'RED' AND RED_WEIGHT_LBS = BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS SAME_WEIGHT_PER,
      (COUNT(CASE WHEN WINNER = 'DRAW' AND BLUE_WEIGHT_LBS > RED_WEIGHT_LBS THEN 1 END) + 
      COUNT(CASE WHEN WINNER = 'DRAW' AND RED_WEIGHT_LBS > BLUE_WEIGHT_LBS THEN 1 END) +
      COUNT(CASE WHEN WINNER = 'DRAW' AND RED_WEIGHT_LBS = BLUE_WEIGHT_LBS THEN 1 END)) * 100.0 / COUNT(*) AS DRAW_PER
    FROM Weight
  ) AS subquery;


-- Looking at Taller Fighter vs Shorter Fighter 

SELECT
  ROUND(subquery.TALLER_WIN_PER, 2) AS TALLER_WIN_PER,
  ROUND(subquery.SHORTER_WIN_PER, 2) AS SHORTER_WIN_PER,
  ROUND(subquery.SAME_HEIGHT_PER, 2) AS SAME_HEIGHT_PER,
  ROUND(subquery.DRAW_PER, 2) AS DRAW_PER,
  ROUND(subquery.TALLER_WIN_PER + subquery.SHORTER_WIN_PER + subquery.SAME_HEIGHT_PER + subquery.DRAW_PER, 2) AS TOTAL_PER
FROM
  (
    SELECT
      (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_HEIGHT_CMS > RED_HEIGHT_CMS THEN 1 END) +
       COUNT(CASE WHEN WINNER = 'RED' AND RED_HEIGHT_CMS > BLUE_HEIGHT_CMS THEN 1 END)) * 100.0 / COUNT(*) AS TALLER_WIN_PER,
      (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_HEIGHT_CMS < RED_HEIGHT_CMS THEN 1 END) +
       COUNT(CASE WHEN WINNER = 'RED' AND RED_HEIGHT_CMS < BLUE_HEIGHT_CMS THEN 1 END)) * 100.0 / COUNT(*) AS SHORTER_WIN_PER,
      (COUNT(CASE WHEN WINNER = 'BLUE' AND BLUE_HEIGHT_CMS = RED_HEIGHT_CMS THEN 1 END) +
       COUNT(CASE WHEN WINNER = 'RED' AND RED_HEIGHT_CMS = BLUE_HEIGHT_CMS THEN 1 END)) * 100.0 / COUNT(*) AS SAME_HEIGHT_PER,
      (COUNT(CASE WHEN WINNER = 'DRAW' AND BLUE_HEIGHT_CMS > RED_HEIGHT_CMS THEN 1 END) + 
      COUNT(CASE WHEN WINNER = 'DRAW' AND RED_HEIGHT_CMS > BLUE_HEIGHT_CMS THEN 1 END) +
      COUNT(CASE WHEN WINNER = 'DRAW' AND RED_HEIGHT_CMS = BLUE_HEIGHT_CMS THEN 1 END)) * 100.0 / COUNT(*) AS DRAW_PER
    FROM Height
  ) AS subquery;

  SELECT *
  FROM Height
  WHERE RED_HEIGHT_CMS = BLUE_HEIGHT_CMS

  -- Looking at the heighest win rate by fighter stance 

SELECT
  RED_STANCE,
  BLUE_STANCE,
  COUNT(*) AS TOTAL_MATCHES,
  SUM(CASE WHEN WINNER = 'RED' THEN 1 ELSE 0 END) AS RED_WINS,
  SUM(CASE WHEN WINNER = 'BLUE' THEN 1 ELSE 0 END) AS BLUE_WINS,
  (SUM(CASE WHEN WINNER = 'RED' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS RED_WIN_RATE,
  (SUM(CASE WHEN WINNER = 'BLUE' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS BLUE_WIN_RATE
FROM
  (
    SELECT
      RED_STANCE,
      BLUE_STANCE,
      WINNER
    FROM Height
  ) AS subquery
GROUP BY
  RED_STANCE,
  BLUE_STANCE
HAVING
  RED_STANCE <> BLUE_STANCE
ORDER BY
  RED_STANCE,
  BLUE_STANCE;
